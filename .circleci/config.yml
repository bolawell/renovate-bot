---
version: 2.1

executors:
  node:
    docker:
      - image: cimg/node:16.4.0
        user: circleci

commands:
  setup_env:
    steps:
      - checkout
      - restore_cache:
          # When lock file changes, use increasingly general patterns to
          # restore cache
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: Install renovate
          command: |
            echo "Set git config for commiter email and username..."
            git config --global user.email "renovate-bot@eana.ro"
            git config --global user.name "Renovate Bot"
            git config --global commit.gpgsign true
            git config --global user.signingkey renovate-bot@eana.ro
            echo "Install renovate-bot..."
            export NPM_CONFIG_PREFIX=${CIRCLE_WORKING_DIRECTORY}/node_modules
            npm install
      - save_cache:
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

jobs:
  run-renovate:
    executor: node
    resource_class: small
    steps:
      - setup_env
      - run:
          name: Run renovate
          command: |
            echo "Configure gpg..."
            export GPG_KEY=$(echo "${GPG_KEY_BASE64}" | base64 --decode)
            echo "Run renovate-bot..."
            npm run renovate

workflows:
  version: 2
  run-renovate:
    jobs:
      - run-renovate:
          context:
            - aws_svc_renovate
            - renovate-bot
          filters:
            branches:
              only: master
  run-renovate-on-schedule:
    triggers:
      - schedule:
          # Monday to Friday, at 9:00, 12:00, 15:00
          cron: "0 9,12,15 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - run-renovate:
          context:
            - aws_svc_renovate
            - renovate-bot
          filters:
            branches:
              only: master
